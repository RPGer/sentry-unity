<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutDir>$(PackageRuntimePath)</OutDir>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
  </PropertyGroup>

  <Target Name="CleanDotnetSdkFiles" AfterTargets="Clean">
    <!-- CopyLocalLockFileAssemblies brings the .NET SDK assemblies to the output dir.
         For that reason they are not clean by the Sentry project clean Target. -->
    <ItemGroup>
      <FilesToDelete Include="$(OutDir)/*.dll" />
      <FilesToDelete Include="$(OutDir)/*.xml" />
      <FilesToDelete Include="$(OutDir)/*.pdb" />
    </ItemGroup>
    <Delete Files="@(FilesToDelete)" ContinueOnError="true" />
  </Target>
  
  <ItemGroup>
    <ProjectReference Include="..\sentry-dotnet\src\Sentry\Sentry.csproj" />
  </ItemGroup>

  <Target Name="alias-references" AfterTargets="AfterCompile" >
    <WriteLinesToFile
      File="$(PackageRuntimePath)/alias-references.txt"
      Lines="$(UnityManagedPath)/UnityEngine.dll"
      Overwrite="true"/>
  </Target>
  <Target Name="AssemblyAlias"
          AfterTargets="AfterBuild"
          Condition="($(DesignTimeBuild) != true Or $(BuildingForLiveUnitTesting))">

    <ItemGroup>
      <FilesToClean Include="$(PackageRuntimePath)\SentryAlias.*"/>
    </ItemGroup>
    <Delete Files="@(FilesToClean)" />
    <PropertyGroup>
      <Command>dotnet assemblyalias
 --target-directory "$(PackageRuntimePath)"
 --internalize
 --prefix "SentryAlias."
 --assemblies-to-alias "Microsoft*;System*"
 --key "$(SolutionDir)src\sentry-dotnet\.assets\Sentry.snk"
      </Command>
      <TrimmedCommand>$(Command.Replace('%0D%0A',''))</TrimmedCommand>
    </PropertyGroup>
    <Message Text="$(TrimmedCommand)" Importance="high" />
    <Exec Command="$(TrimmedCommand)" ConsoleToMsBuild="true" />
  </Target>

</Project>
